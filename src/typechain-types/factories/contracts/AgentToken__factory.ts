/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AgentToken,
  AgentTokenInterface,
} from "../../contracts/AgentToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ERC2612ExpiredSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC2612InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002c4538038062002c458339818101604052810190620000389190620005c4565b81806040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508585858160039081620000849190620008a9565b508060049081620000969190620008a9565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200010e5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001059190620009a1565b60405180910390fd5b6200011f81620001da60201b60201c565b5062000136600683620002a060201b90919060201c565b610120818152505062000154600782620002a060201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a0818152505062000193620002f860201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505050505050505062000b5f565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000602083511015620002c657620002be836200035560201b60201c565b9050620002f2565b82620002d883620003c260201b60201c565b6000019081620002e99190620008a9565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016200033a959493929190620009ea565b60405160208183030381529060405280519060200120905090565b600080829050601f81511115620003a557826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016200039c919062000a99565b60405180910390fd5b805181620003b39062000aef565b60001c1760001b915050919050565b6000819050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200040d82620003e0565b9050919050565b6200041f8162000400565b81146200042b57600080fd5b50565b6000815190506200043f8162000414565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200049a826200044f565b810181811067ffffffffffffffff82111715620004bc57620004bb62000460565b5b80604052505050565b6000620004d1620003cc565b9050620004df82826200048f565b919050565b600067ffffffffffffffff82111562000502576200050162000460565b5b6200050d826200044f565b9050602081019050919050565b60005b838110156200053a5780820151818401526020810190506200051d565b60008484015250505050565b60006200055d6200055784620004e4565b620004c5565b9050828152602081018484840111156200057c576200057b6200044a565b5b620005898482856200051a565b509392505050565b600082601f830112620005a957620005a862000445565b5b8151620005bb84826020860162000546565b91505092915050565b600080600060608486031215620005e057620005df620003d6565b5b6000620005f0868287016200042e565b935050602084015167ffffffffffffffff811115620006145762000613620003db565b5b620006228682870162000591565b925050604084015167ffffffffffffffff811115620006465762000645620003db565b5b620006548682870162000591565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620006b157607f821691505b602082108103620006c757620006c662000669565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620007317fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620006f2565b6200073d8683620006f2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200078a620007846200077e8462000755565b6200075f565b62000755565b9050919050565b6000819050919050565b620007a68362000769565b620007be620007b58262000791565b848454620006ff565b825550505050565b600090565b620007d5620007c6565b620007e28184846200079b565b505050565b5b818110156200080a57620007fe600082620007cb565b600181019050620007e8565b5050565b601f82111562000859576200082381620006cd565b6200082e84620006e2565b810160208510156200083e578190505b620008566200084d85620006e2565b830182620007e7565b50505b505050565b600082821c905092915050565b60006200087e600019846008026200085e565b1980831691505092915050565b60006200089983836200086b565b9150826002028217905092915050565b620008b4826200065e565b67ffffffffffffffff811115620008d057620008cf62000460565b5b620008dc825462000698565b620008e98282856200080e565b600060209050601f8311600181146200092157600084156200090c578287015190505b6200091885826200088b565b86555062000988565b601f1984166200093186620006cd565b60005b828110156200095b5784890151825560018201915060208501945060208101905062000934565b868310156200097b578489015162000977601f8916826200086b565b8355505b6001600288020188555050505b505050505050565b6200099b8162000400565b82525050565b6000602082019050620009b8600083018462000990565b92915050565b6000819050919050565b620009d381620009be565b82525050565b620009e48162000755565b82525050565b600060a08201905062000a016000830188620009c8565b62000a106020830187620009c8565b62000a1f6040830186620009c8565b62000a2e6060830185620009d9565b62000a3d608083018462000990565b9695505050505050565b600082825260208201905092915050565b600062000a65826200065e565b62000a71818562000a47565b935062000a838185602086016200051a565b62000a8e816200044f565b840191505092915050565b6000602082019050818103600083015262000ab5818462000a58565b905092915050565b600081519050919050565b6000819050602082019050919050565b600062000ae68251620009be565b80915050919050565b600062000afc8262000abd565b8262000b088462000ac8565b905062000b158162000ad8565b9250602082101562000b585762000b537fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802620006f2565b831692505b5050919050565b60805160a05160c05160e05161010051610120516101405161208b62000bba6000396000610e8501526000610e4a0152600061139a0152600061137901526000610af401526000610b4a01526000610b73015261208b6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad57806395d89b411161007157806395d89b41146102fe578063a9059cbb1461031c578063d505accf1461034c578063dd62ed3e14610368578063f2fde38b1461039857610121565b8063715018a61461026657806379cc6790146102705780637ecebe001461028c57806384b0196e146102bc5780638da5cb5b146102e057610121565b8063313ce567116100f4578063313ce567146101c25780633644e515146101e057806340c10f19146101fe57806342966c681461021a57806370a082311461023657610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e6103b4565b60405161013b9190611887565b60405180910390f35b61015e60048036038101906101599190611942565b610446565b60405161016b919061199d565b60405180910390f35b61017c610469565b60405161018991906119c7565b60405180910390f35b6101ac60048036038101906101a791906119e2565b610473565b6040516101b9919061199d565b60405180910390f35b6101ca6104a2565b6040516101d79190611a51565b60405180910390f35b6101e86104a7565b6040516101f59190611a85565b60405180910390f35b61021860048036038101906102139190611942565b6104b6565b005b610234600480360381019061022f9190611aa0565b6104cc565b005b610250600480360381019061024b9190611acd565b6104e1565b60405161025d91906119c7565b60405180910390f35b61026e610529565b005b61028a60048036038101906102859190611942565b61053d565b005b6102a660048036038101906102a19190611acd565b61055d565b6040516102b391906119c7565b60405180910390f35b6102c461056f565b6040516102d79796959493929190611c02565b60405180910390f35b6102e8610619565b6040516102f59190611c86565b60405180910390f35b610306610643565b6040516103139190611887565b60405180910390f35b61033660048036038101906103319190611942565b6106d5565b604051610343919061199d565b60405180910390f35b61036660048036038101906103619190611cf9565b6106f8565b005b610382600480360381019061037d9190611d9b565b610840565b60405161038f91906119c7565b60405180910390f35b6103b260048036038101906103ad9190611acd565b6108c7565b005b6060600380546103c390611e0a565b80601f01602080910402602001604051908101604052809291908181526020018280546103ef90611e0a565b801561043c5780601f106104115761010080835404028352916020019161043c565b820191906000526020600020905b81548152906001019060200180831161041f57829003601f168201915b5050505050905090565b60008061045161094d565b905061045e818585610955565b600191505092915050565b6000600254905090565b60008061047e61094d565b905061048b858285610967565b6104968585856109fc565b60019150509392505050565b600090565b60006104b1610af0565b905090565b6104be610ba7565b6104c88282610c2e565b5050565b6104d4610ba7565b6104de3282610cb0565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610531610ba7565b61053b6000610d32565b565b61054f8261054961094d565b83610967565b6105598282610cb0565b5050565b600061056882610df8565b9050919050565b600060608060008060006060610583610e41565b61058b610e7c565b46306000801b600067ffffffffffffffff8111156105ac576105ab611e3b565b5b6040519080825280602002602001820160405280156105da5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461065290611e0a565b80601f016020809104026020016040519081016040528092919081815260200182805461067e90611e0a565b80156106cb5780601f106106a0576101008083540402835291602001916106cb565b820191906000526020600020905b8154815290600101906020018083116106ae57829003601f168201915b5050505050905090565b6000806106e061094d565b90506106ed8185856109fc565b600191505092915050565b8342111561073d57836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161073491906119c7565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861076c8c610eb7565b8960405160200161078296959493929190611e6a565b60405160208183030381529060405280519060200120905060006107a582610f0e565b905060006107b582878787610f28565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461082957808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610820929190611ecb565b60405180910390fd5b6108348a8a8a610955565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6108cf610ba7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109415760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109389190611c86565b60405180910390fd5b61094a81610d32565b50565b600033905090565b6109628383836001610f58565b505050565b60006109738484610840565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109f657818110156109e6578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109dd93929190611ef4565b60405180910390fd5b6109f584848484036000610f58565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a6e5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a659190611c86565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ae05760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ad79190611c86565b60405180910390fd5b610aeb83838361112f565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610b6c57507f000000000000000000000000000000000000000000000000000000000000000046145b15610b99577f00000000000000000000000000000000000000000000000000000000000000009050610ba4565b610ba1611354565b90505b90565b610baf61094d565b73ffffffffffffffffffffffffffffffffffffffff16610bcd610619565b73ffffffffffffffffffffffffffffffffffffffff1614610c2c57610bf061094d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c239190611c86565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca05760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c979190611c86565b60405180910390fd5b610cac6000838361112f565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d225760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d199190611c86565b60405180910390fd5b610d2e8260008361112f565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610e7760067f00000000000000000000000000000000000000000000000000000000000000006113ea90919063ffffffff16565b905090565b6060610eb260077f00000000000000000000000000000000000000000000000000000000000000006113ea90919063ffffffff16565b905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b6000610f21610f1b610af0565b8361149a565b9050919050565b600080600080610f3a888888886114db565b925092509250610f4a82826115cf565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fca5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610fc19190611c86565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361103c5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110339190611c86565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611129578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161112091906119c7565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111815780600260008282546111759190611f5a565b92505081905550611254565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561120d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161120493929190611ef4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361129d57806002600082825403925050819055506112ea565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161134791906119c7565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016113cf959493929190611f8e565b60405160208183030381529060405280519060200120905090565b606060ff60001b83146114075761140083611733565b9050611494565b81805461141390611e0a565b80601f016020809104026020016040519081016040528092919081815260200182805461143f90611e0a565b801561148c5780601f106114615761010080835404028352916020019161148c565b820191906000526020600020905b81548152906001019060200180831161146f57829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561151b5760006003859250925092506115c5565b6000600188888888604051600081526020016040526040516115409493929190611fe1565b6020604051602081039080840390855afa158015611562573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115b657600060016000801b935093509350506115c5565b8060008060001b935093509350505b9450945094915050565b600060038111156115e3576115e2612026565b5b8260038111156115f6576115f5612026565b5b031561172f57600160038111156116105761160f612026565b5b82600381111561162357611622612026565b5b0361165a576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561166e5761166d612026565b5b82600381111561168157611680612026565b5b036116c6578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016116bd91906119c7565b60405180910390fd5b6003808111156116d9576116d8612026565b5b8260038111156116ec576116eb612026565b5b0361172e57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016117259190611a85565b60405180910390fd5b5b5050565b60606000611740836117a7565b90506000602067ffffffffffffffff81111561175f5761175e611e3b565b5b6040519080825280601f01601f1916602001820160405280156117915781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f8111156117ee576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611831578082015181840152602081019050611816565b60008484015250505050565b6000601f19601f8301169050919050565b6000611859826117f7565b6118638185611802565b9350611873818560208601611813565b61187c8161183d565b840191505092915050565b600060208201905081810360008301526118a1818461184e565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118d9826118ae565b9050919050565b6118e9816118ce565b81146118f457600080fd5b50565b600081359050611906816118e0565b92915050565b6000819050919050565b61191f8161190c565b811461192a57600080fd5b50565b60008135905061193c81611916565b92915050565b60008060408385031215611959576119586118a9565b5b6000611967858286016118f7565b92505060206119788582860161192d565b9150509250929050565b60008115159050919050565b61199781611982565b82525050565b60006020820190506119b2600083018461198e565b92915050565b6119c18161190c565b82525050565b60006020820190506119dc60008301846119b8565b92915050565b6000806000606084860312156119fb576119fa6118a9565b5b6000611a09868287016118f7565b9350506020611a1a868287016118f7565b9250506040611a2b8682870161192d565b9150509250925092565b600060ff82169050919050565b611a4b81611a35565b82525050565b6000602082019050611a666000830184611a42565b92915050565b6000819050919050565b611a7f81611a6c565b82525050565b6000602082019050611a9a6000830184611a76565b92915050565b600060208284031215611ab657611ab56118a9565b5b6000611ac48482850161192d565b91505092915050565b600060208284031215611ae357611ae26118a9565b5b6000611af1848285016118f7565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611b2f81611afa565b82525050565b611b3e816118ce565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611b798161190c565b82525050565b6000611b8b8383611b70565b60208301905092915050565b6000602082019050919050565b6000611baf82611b44565b611bb98185611b4f565b9350611bc483611b60565b8060005b83811015611bf5578151611bdc8882611b7f565b9750611be783611b97565b925050600181019050611bc8565b5085935050505092915050565b600060e082019050611c17600083018a611b26565b8181036020830152611c29818961184e565b90508181036040830152611c3d818861184e565b9050611c4c60608301876119b8565b611c596080830186611b35565b611c6660a0830185611a76565b81810360c0830152611c788184611ba4565b905098975050505050505050565b6000602082019050611c9b6000830184611b35565b92915050565b611caa81611a35565b8114611cb557600080fd5b50565b600081359050611cc781611ca1565b92915050565b611cd681611a6c565b8114611ce157600080fd5b50565b600081359050611cf381611ccd565b92915050565b600080600080600080600060e0888a031215611d1857611d176118a9565b5b6000611d268a828b016118f7565b9750506020611d378a828b016118f7565b9650506040611d488a828b0161192d565b9550506060611d598a828b0161192d565b9450506080611d6a8a828b01611cb8565b93505060a0611d7b8a828b01611ce4565b92505060c0611d8c8a828b01611ce4565b91505092959891949750929550565b60008060408385031215611db257611db16118a9565b5b6000611dc0858286016118f7565b9250506020611dd1858286016118f7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e2257607f821691505b602082108103611e3557611e34611ddb565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c082019050611e7f6000830189611a76565b611e8c6020830188611b35565b611e996040830187611b35565b611ea660608301866119b8565b611eb360808301856119b8565b611ec060a08301846119b8565b979650505050505050565b6000604082019050611ee06000830185611b35565b611eed6020830184611b35565b9392505050565b6000606082019050611f096000830186611b35565b611f1660208301856119b8565b611f2360408301846119b8565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f658261190c565b9150611f708361190c565b9250828201905080821115611f8857611f87611f2b565b5b92915050565b600060a082019050611fa36000830188611a76565b611fb06020830187611a76565b611fbd6040830186611a76565b611fca60608301856119b8565b611fd76080830184611b35565b9695505050505050565b6000608082019050611ff66000830187611a76565b6120036020830186611a42565b6120106040830185611a76565b61201d6060830184611a76565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220d7452911f50642a26a9a6481c052a77d548275f00b9b6335b97dbbd163c9156664736f6c63430008160033";

type AgentTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgentTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgentToken__factory extends ContractFactory {
  constructor(...args: AgentTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialOwner: PromiseOrValue<string>,
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AgentToken> {
    return super.deploy(
      initialOwner,
      name,
      symbol,
      overrides || {}
    ) as Promise<AgentToken>;
  }
  override getDeployTransaction(
    initialOwner: PromiseOrValue<string>,
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialOwner,
      name,
      symbol,
      overrides || {}
    );
  }
  override attach(address: string): AgentToken {
    return super.attach(address) as AgentToken;
  }
  override connect(signer: Signer): AgentToken__factory {
    return super.connect(signer) as AgentToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgentTokenInterface {
    return new utils.Interface(_abi) as AgentTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AgentToken {
    return new Contract(address, _abi, signerOrProvider) as AgentToken;
  }
}
